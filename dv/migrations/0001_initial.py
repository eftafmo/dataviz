# -*- coding: utf-8 -*-
# Generated by Django 1.11.1 on 2017-05-11 16:31
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import dv.lib.models
import dv.models
import enumfields.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Allocation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gross_allocation', models.DecimalField(decimal_places=2, max_digits=15)),
                ('net_allocation', models.DecimalField(decimal_places=2, max_digits=15)),
                ('order', models.SmallIntegerField()),
            ],
            options={
                'abstract': False,
            },
            bases=(dv.lib.models.ImportableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='FinancialMechanism',
            fields=[
                ('code', models.CharField(max_length=16, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128, unique=True)),
                ('grant_name', models.CharField(max_length=128, unique=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(dv.lib.models.ImportableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Indicator',
            fields=[
                ('code', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(dv.lib.models.ImportableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='News',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.TextField()),
                ('link', models.URLField(max_length=2000)),
                ('created', models.DateTimeField(null=True)),
                ('updated', models.DateTimeField(null=True)),
                ('summary', models.TextField(null=True)),
                ('image', models.URLField(max_length=2000)),
                ('is_partnership', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('-created',),
            },
        ),
        migrations.CreateModel(
            name='NUTS',
            fields=[
                ('code', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('label', models.CharField(max_length=128)),
            ],
            options={
                'abstract': False,
            },
            bases=(dv.lib.models.ImportableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Organisation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ptype', enumfields.fields.EnumField(enum=dv.models.Organisation.ORGANISATION_TYPE, max_length=9)),
                ('country', models.CharField(max_length=64)),
                ('name', models.CharField(max_length=256)),
                ('nuts', models.CharField(max_length=5)),
            ],
            options={
                'abstract': False,
            },
            bases=(dv.lib.models.ImportableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='OrganisationRole',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('role', enumfields.fields.EnumField(enum=dv.models.OrganisationRole.ROLE, max_length=23)),
                ('organisation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.Organisation')),
            ],
            options={
                'abstract': False,
            },
            bases=(dv.lib.models.ImportableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='OrganisationType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', enumfields.fields.EnumField(enum=dv.models.OrganisationType.CATEGORY, max_length=26)),
                ('name', models.CharField(max_length=128, unique=True)),
            ],
            options={
                'abstract': False,
            },
            bases=(dv.lib.models.ImportableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Outcome',
            fields=[
                ('code', models.CharField(max_length=12, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=512)),
                ('fixed_budget_line', models.BooleanField()),
            ],
            options={
                'abstract': False,
            },
            bases=(dv.models._FussyOutcomeCode, dv.lib.models.ImportableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='PrioritySector',
            fields=[
                ('code', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64)),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.FinancialMechanism')),
            ],
            options={
                'abstract': False,
            },
            bases=(dv.lib.models.ImportableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Programme',
            fields=[
                ('code', models.CharField(max_length=5, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256)),
                ('status', enumfields.fields.EnumField(enum=dv.models.Programme.STATUS, max_length=14)),
                ('summary', models.TextField()),
                ('allocation_eea', models.DecimalField(decimal_places=2, max_digits=15)),
                ('allocation_norway', models.DecimalField(decimal_places=2, max_digits=15)),
                ('co_financing', models.DecimalField(decimal_places=2, max_digits=15)),
            ],
            options={
                'abstract': False,
            },
            bases=(dv.lib.models.ImportableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Programme_ProgrammeArea',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('programme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.Programme')),
            ],
            options={
                'abstract': False,
            },
            bases=(dv.lib.models.ImportableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ProgrammeArea',
            fields=[
                ('code', models.CharField(max_length=4, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=256)),
                ('short_name', models.CharField(max_length=32)),
                ('order', models.SmallIntegerField()),
                ('objective', models.TextField()),
            ],
            options={
                'abstract': False,
            },
            bases=(dv.lib.models.ImportableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ProgrammeIndicator',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('achievement', models.IntegerField()),
                ('indicator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.Indicator')),
                ('outcome', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.Outcome')),
                ('programme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.Programme')),
                ('programme_area', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.ProgrammeArea')),
            ],
            options={
                'abstract': False,
            },
            bases=(dv.lib.models.ImportableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ProgrammeOutcome',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('allocation', models.FloatField()),
                ('co_financing', models.FloatField()),
                ('outcome', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.Outcome')),
                ('programme', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dv.Programme')),
            ],
            bases=(dv.models._FussyOutcomeCode, dv.lib.models.ImportableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Project',
            fields=[
                ('status', enumfields.fields.EnumField(enum=dv.models.Project.STATUS, max_length=11)),
                ('code', models.CharField(max_length=9, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=512)),
                ('nuts', models.CharField(max_length=5)),
                ('allocation', models.DecimalField(decimal_places=2, max_digits=15)),
                ('programme_co_financing', models.DecimalField(decimal_places=2, max_digits=15)),
                ('project_co_financing', models.DecimalField(decimal_places=2, max_digits=15)),
                ('is_eea', models.BooleanField()),
                ('is_norway', models.BooleanField()),
                ('outcome', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.Outcome')),
                ('programme', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.Programme')),
            ],
            options={
                'abstract': False,
            },
            bases=(dv.lib.models.ImportableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('code', models.CharField(max_length=2, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=64, unique=True)),
                ('url', models.TextField()),
            ],
            options={
                'abstract': False,
            },
            bases=(dv.lib.models.ImportableModelMixin, models.Model),
        ),
        migrations.AddField(
            model_name='project',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.State'),
        ),
        migrations.AddField(
            model_name='programmeoutcome',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.State'),
        ),
        migrations.AddField(
            model_name='programmearea',
            name='allocations',
            field=models.ManyToManyField(through='dv.Allocation', to='dv.State'),
        ),
        migrations.AddField(
            model_name='programmearea',
            name='priority_sector',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.PrioritySector'),
        ),
        migrations.AddField(
            model_name='programme_programmearea',
            name='programme_area',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.ProgrammeArea'),
        ),
        migrations.AddField(
            model_name='programme',
            name='programme_areas',
            field=models.ManyToManyField(through='dv.Programme_ProgrammeArea', to='dv.ProgrammeArea'),
        ),
        migrations.AddField(
            model_name='programme',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.State'),
        ),
        migrations.AddField(
            model_name='outcome',
            name='programme_area',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.ProgrammeArea'),
        ),
        migrations.AddField(
            model_name='organisationrole',
            name='programme',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dv.Programme'),
        ),
        migrations.AddField(
            model_name='organisationrole',
            name='project',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dv.Project'),
        ),
        migrations.AddField(
            model_name='organisation',
            name='orgtype',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dv.OrganisationType'),
        ),
        migrations.AddField(
            model_name='news',
            name='programmes',
            field=models.ManyToManyField(to='dv.Programme'),
        ),
        migrations.AddField(
            model_name='news',
            name='project',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='dv.Project'),
        ),
        migrations.AddField(
            model_name='allocation',
            name='financial_mechanism',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.FinancialMechanism'),
        ),
        migrations.AddField(
            model_name='allocation',
            name='programme_area',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.ProgrammeArea'),
        ),
        migrations.AddField(
            model_name='allocation',
            name='state',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dv.State'),
        ),
        migrations.AlterUniqueTogether(
            name='programmeoutcome',
            unique_together=set([('programme', 'outcome', 'state')]),
        ),
        migrations.AlterUniqueTogether(
            name='programme_programmearea',
            unique_together=set([('programme', 'programme_area')]),
        ),
        migrations.AlterUniqueTogether(
            name='allocation',
            unique_together=set([('state', 'programme_area', 'financial_mechanism')]),
        ),
    ]
